version: "3.4"

services:
    db:
      image: postgres:15.2-alpine
      restart: unless-stopped
      networks:
        - fake-local-network
      env_file:
          - ./.env
      environment:
          - PGDATA=/var/lib/postgresql/data/pgdata
      volumes:
          - ./volumes/db:/var/lib/postgresql/data/pgdata
      ports:
          - "5432:5432"

    backend:
      build: ./backend
      restart: unless-stopped
      networks:
        - fake-local-network
        - kafka-network
      env_file:
        - ./backend/docker.env
      ports:
        - "8000:8000"
      depends_on:
        - db

    frontend:
      build: ./frontend
      restart: unless-stopped
      env_file:
        - ./frontend/docker.env
      ports:
        - "3000:3000"
      volumes:
        - ./frontend:/usr/src/app
      depends_on:
        - backend

    robot:
      build:
        context: ./python-server
        dockerfile: Dockerfile
      ports:
        - 8150:8150
      volumes:
        - ./python-server:/app
      networks:
        - fake-local-network
        - kafka-network
      depends_on:
        - kafka

    kafka:
      image: confluentinc/cp-kafka:latest
      depends_on:
        - zookeeper
      ports:
        - 29092:29092
        - 29093:29093
      networks:
        - kafka-network
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,EXTERNAL_DIFFERENT_HOST://:29093,INTERNAL://:9092
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092,EXTERNAL_DIFFERENT_HOST://192.168.1.64:29093
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT,EXTERNAL_DIFFERENT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    zookeeper:
      image: bitnami/zookeeper:latest
      platform: linux/arm64
      ports:
        - "2181:2181"
      networks:
        - kafka-network
      environment:
        - ALLOW_ANONYMOUS_LOGIN=yes

    kafdrop:
      image: obsidiandynamics/kafdrop:latest
      container_name: kafdrop
      networks:
      - kafka-network
      ports:
        - "9000:9000"
      environment:
        - KAFKA_BROKERCONNECT=kafka:9092
        - KAFKA_PROPERTIES_CONFLUENT_SUPPORT_METRICS_ENABLE=false
        - KAFKA_PROPERTIES_CONFLUENT_SUPPORT_CUSTOMER_ID=false
        - KAFKA_JVM_OPTS=-Xms16M -Xmx64M
      depends_on:
        - zookeeper
        - kafka


networks:
  fake-local-network:
    driver: bridge
    ipam:
      config:
        - subnet: "172.29.0.0/16"
  kafka-network:
    external: false


    